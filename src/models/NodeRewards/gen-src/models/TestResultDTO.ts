/* tslint:disable */
/* eslint-disable */
/**
 * Symbol Node Rewards API
 * The API is the rest gateway to the symbol rewards controller.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TestResultDTO
 */
export interface TestResultDTO {
    /**
     * ID of the test result
     * @type {string}
     * @memberof TestResultDTO
     */
    id: string;
    /**
     * ID of the tested node
     * @type {string}
     * @memberof TestResultDTO
     */
    nodeId: string;
    /**
     * 
     * @type {boolean}
     * @memberof TestResultDTO
     */
    nodeVersionTestOk: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TestResultDTO
     */
    chainHeightTestOk: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TestResultDTO
     */
    chainPartTestOk: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TestResultDTO
     */
    responsivenessTestOk: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TestResultDTO
     */
    bandwidthTestOk?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TestResultDTO
     */
    computingPowerTestOk: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TestResultDTO
     */
    pingTestOk: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TestResultDTO
     */
    nodeBalanceTestOk: boolean;
    /**
     * 
     * @type {number}
     * @memberof TestResultDTO
     */
    round: number;
    /**
     * 
     * @type {string}
     * @memberof TestResultDTO
     */
    createdAt: string;
}

export function TestResultDTOFromJSON(json: any): TestResultDTO {
    return TestResultDTOFromJSONTyped(json, false);
}

export function TestResultDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestResultDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'nodeId': json['nodeId'],
        'nodeVersionTestOk': json['nodeVersionTestOk'],
        'chainHeightTestOk': json['chainHeightTestOk'],
        'chainPartTestOk': json['chainPartTestOk'],
        'responsivenessTestOk': json['responsivenessTestOk'],
        'bandwidthTestOk': !exists(json, 'bandwidthTestOk') ? undefined : json['bandwidthTestOk'],
        'computingPowerTestOk': json['computingPowerTestOk'],
        'pingTestOk': json['pingTestOk'],
        'nodeBalanceTestOk': json['nodeBalanceTestOk'],
        'round': json['round'],
        'createdAt': json['createdAt'],
    };
}

export function TestResultDTOToJSON(value?: TestResultDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'nodeId': value.nodeId,
        'nodeVersionTestOk': value.nodeVersionTestOk,
        'chainHeightTestOk': value.chainHeightTestOk,
        'chainPartTestOk': value.chainPartTestOk,
        'responsivenessTestOk': value.responsivenessTestOk,
        'bandwidthTestOk': value.bandwidthTestOk,
        'computingPowerTestOk': value.computingPowerTestOk,
        'pingTestOk': value.pingTestOk,
        'nodeBalanceTestOk': value.nodeBalanceTestOk,
        'round': value.round,
        'createdAt': value.createdAt,
    };
}


